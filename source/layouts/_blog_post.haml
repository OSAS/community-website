:ruby
  # Example invocation (with optional "summarize"):
  #
  # = partial :blog_post, locals: {article: article, summarize: 300}
  #
  #      ...or include the current_page as article (in some cases):
  #
  # = partial :blog_post, locals: {article: current_page}

  def author_name nickname
    data.authors[nickname] ? data.authors[nickname].name : nickname
  end

  def author_link nickname, text = author_name(nickname)
    link_to text, "/blog/author/#{nickname}/"
  end

  def author_card nickname
    return @author_card[nickname] if @author_card

    @author_card ||= {}

    author = data.authors[nickname]

    @author_card[nickname] = if author && author['description']
      author['description']
    end

    author_card nickname
  end

  def author_gravatar nickname
    return @author_gravatar[nickname] if @author_gravatar && defined? @author_gravatar[nickname]

    @author_gravatar ||= {}

    author = data.authors[nickname]

    return unless (author['gravatar'] || author['email'])

    require 'digest/md5'
    g_hash = author['gravatar'] || Digest::MD5.hexdigest(author['email'])
    g_json = open("http://gravatar.com/#{g_hash}.json").read rescue nil

    @author_gravatar[nickname] = if author && g_json
      profile = Oj.load g_json
    end

    author_gravatar nickname
  end

  def author_photo nickname
    profile = author_gravatar nickname

    image_tag profile['entry'][0]['thumbnailUrl'] if profile
  end

  ###

  author = article.data.author
  article_view = (article.url == current_page.url)


- if article_view
  - content_for :meta do

    - article_summary = article.data.summary || Nokogiri::HTML(article.summary(200)).text.strip
    - transport = data.site.ssl ? "https://" : "http://"

    - twitter_name = data.authors[author]['twitter']
    - googleplus_id = data.authors[author]['googleplus']
    - facebook_id = data.authors[author]['facebook']

    / Open Graph (FB / G+)
    %meta{content: "article", property: "og:type"}
    %meta{content: article.title, property: "og:title"}
    %meta{content: article_summary, property: "og:description"}
    -#%meta{content: image_preview, property: "og:image"}
    %meta{content: "#{transport}#{data.site.domain}#{article.url}", property: "og:url"}
    %meta{content: article.date.iso8601, property: "article:published_time"}

    -#%meta{content: author_name(author), property: "article:author"}

    - if twitter_name
      %meta{content: "https://twitter.com/#{twitter_name}", property: "article:author"}

    - if googleplus_id
      %meta{content: "https://plus.google.com/+#{googleplus_id}", property: "article:author"}

    - if facebook_id
      %meta{content: "https://facebook.com/#{facebook_id}", property: "article:author"}

    %meta{content: author, property: "article:author:username"}

    - if article.data.tags
      - article.data.tags.sort {|a,b| a.downcase <=> b.downcase}.each do |tag|
        %meta{content: tag, property: "article:tag"}

    / Twitter card
    %meta{content: "summary", name: "twitter:card"}

    - if data.site.twitter
      %meta{content: "@#{data.site.twitter}", name: "twitter:site"}

    - if twitter_name
      %meta{content: "@#{twitter_name}", name: "twitter:creator"}

    %meta{content: article.title, name: "twitter:title"}
    %meta{content: article_summary, name: "twitter:description"}

    -#%meta{content: ", name: "twitter:image:src"}
    -#%meta{content: ", name: "twitter:domain"}

%article.post.hentry

  %header.post-header

    %h2.post-title.entry-title
      - if (defined? article.url) && article.url != current_page.url
        = link_to article.title, article.url
      - else
        = article.title

    %header.post-meta
      %span.byline
        by
        %span.author.vcard
          = author_link article.data.author

      &ndash;

      %time.published{datetime: article.date.iso8601}
        = pretty_date article.date

      - if defined? article.data.summary
        .entry-summary.hidden= markdown_to_html article.data.summary

  %section.post-content.entry-content
    - if defined? summarize
      = demote_headings article.summary summarize
      .more-link
        = link_to "Read More &raquo;", article.url
    - else
      = demote_headings article.body

      - unless article_view
        .more-link
          = link_to "Add a comment &raquo;", "#{article.url}#blog-comments"

  %footer.post-meta
    - if article.data.tags
      - tags = article.data.tags

      -# Handle a comma-separated list of tags
      - tags = tags.parse_csv.map{|s| s.strip} if tags.class == String

      .tags
        Tags:

        %ul.taglist
        - tags.sort {|a,b| a.downcase <=> b.downcase}.each do |tag|
          %li= link_to tag, tag_path(tag)

    - if article_view && author_card(author)

      #author-info.author-info

        %h2
          About
          = author_name author

        - if author_photo author
          .author-photo= author_photo author
          - with_photo = true

        .author-blurb{class: with_photo ? 'with-photo' : ''}
          = author_card author
          .more-link
            = author_link(author, "View all posts by #{author_name author} &raquo;")

    -# Share
