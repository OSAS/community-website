:ruby
  require 'sass'

  color1 = "#c00"
  color2 = "#55a"
  color3 = "#5a5"

  optionsPie = {
    animation: false,
    # segmentShowStroke: false,
    segmentStrokeWidth: 1,
    percentageInnerCutout: 45,
    tooltipEvents: []
  }.to_json

  optionsLine = {
    animation: false,
    showScale: false,
    # pointDot: false,
    pointDotRadius: 3,
    pointDotStrokeWidth: 1,
    pointHistDetectionRadius: 0,
    scaleBeginAtZero: false,
    # scaleLineWidth: 1,
    # responsive: true,
    maintainAspectRatio: false,
    scaleShowLabels: false,
    datasetFill: false,
    # bezierCurve: false,
    bezierCurveTension: 0.4
  }.to_json

  # Helper to easily do SASS from within Ruby
  def sass(cmd)
    Sass::Script::Parser.parse(cmd, 0, 0).perform(Sass::Environment.new).to_s
  end

  # Process chart info for a line
  def chartLine(label, color, info)
    {
      data: info,
      fillColor: "transparent",
      label: label,
      pointColor: sass(color),
      pointHighlightFill: sass("mix(#{color}, #000, 75)"),
      pointHighlightStroke: "#fff",
      pointStrokeColor: "#fff",
      strokeColor: sass("mix(#{color}, #fff, 50)"),
    }
  end

  # Process chart info for a pie piece
  def chartPie(label, color, info)
    {
      value: info,
      color: sass(color),
      highlight: sass("mix(#{color}, #fff, 75)"),
      label: label
    }
  end

  # Take the last X months (default = 12), minus current (which is incomplete)
  def lastMonths(info, months = 12)
    info.last(months + 1).take(months)
  end

- content_for :tail do
  :coffee
    @chart = (name, type, data, options) ->
      ctx = $(name).get(0).getContext('2d')
      new Chart(ctx)[type](data, options)
  

- content_for :head do
  %style
    :sass

      .dashboard

        h3
          margin-top: 2em

      .bar-dev
        float: left
        // white-space: nowrap
        // position: relative
        list-style: none
        margin: 0
        padding: 0
        overflow: none
        min-width: 25%

        li
          // white-space: nowrap
          list-style: none
          margin: 0
          padding: 0
          //width: 15rem
          clear: both

          + li
            padding-top: 0.25ex

          &.core
            color: #{color1}
          &.regular
            color: #{color2}
          &.occasional
            color: #{color3}

        .part-contain
          width: 12em
          display: inline-block

          .part
            font-weight: normal
            background-color: lightblue
            display: inline-block
            float: left
            // text-align: center
            padding: 0 1.25ex
            border-radius: 3ex
            // margin: 0 0 0.5ex
            color: #fff
            min-width: 4.25ex
            vertical-align: top
            text-shadow: 1px 1px 2px rgba(black, 0.3)

            &.core
              background-color: #{color1}
            &.regular
              background-color: #{color2}
            &.occasional
              background-color: #{color3}

        .label
          min-width: 10ex
          display: inline-block
          text-align: right
          padding-right: 1ex
          vertical-align: top

      .bar-dev-2
        // white-space: nowrap
        // position: relative
        float: left
        list-style: none
        margin: 0
        padding: 0.5ex 0 0
        overflow: none
        //min-width: 25%

        li
          // white-space: nowrap
          //list-style: none
          margin: 0
          padding: 0
          //width: 15rem
          clear: both

          + li
            padding-top: 0.25ex

          &.core
            color: #{color1}
          &.regular
            color: #{color2}
          &.occasional
            color: #{color3}

        .part-contain
          //width: 12em
          display: inline-block
          min-width: 7ex
          margin-right: 0.5ex
          text-align: right

          .part
            font-weight: normal
            //background-color: lightblue
            //display: inline-block
            //float: left
            // text-align: center
            padding: 0 1.25ex
            border-radius: 3ex
            // margin: 0 0 0.5ex
            color: #fff
            text-shadow: 1px 1px 2px rgba(black, 0.3)
            //min-width: 4.25ex
            //vertical-align: top

            &.core
              background-color: rgba(#{color1}, 0.75)
            &.regular
              background-color: rgba(#{color2}, 0.75)
            &.occasional
              background-color: rgba(#{color3}, 0.75)

        .label
          //min-width: 10ex
          //display: inline-block
          //text-align: right
          //padding-right: 1ex
          //vertical-align: top

      .pie
        float: left
        //margin-left: 2rem

      .pie-crust
        clear: both
        padding: 1em 0
        overflow: hidden

      .dashboard-item + .dashboard-item
        margin-top: 6rem

      .active-new

        .year

        .month
          opacity: 0.6

- if data[:dashboard]

  .dashboard
    %h1 Community dashboard

    - data.dashboard.each do |label, project|
      - stat = project.stat
      .row{class: "dashboard-item dashboard-#{label}"}
        %h2= project.details.name

        .col-md-6
          %h3 Types of developers
          %p
            Total developers:
            %strong= stat.scm.authors

          -#%ul.bar-dev
            - scm = stat.scm
            - max = [scm.core, scm.regular, scm.occasional].max
            - %w(core regular occasional).each do |reg|
              - a = scm[reg]
              - percent = 100.0 * a / max
              - title = "#{reg.titleize} developers"
              %li{class: reg}
                %span.label= reg
                %span.part-contain
                  %strong.part{style: "width:#{percent}%;", title: title, class: reg}= a

          .pie-crust
            - scm = stat.scm

            %canvas.pie{id: "#{label}Pie", style: "width:7rem;height:7rem;"}
              - content_for :tail do
                :ruby
                  data = [
                    chartPie("Core", color1, scm.core),
                    chartPie("Regular", color2, scm.regular),
                    chartPie("Occasional", color3, scm.occasional),
                  ].to_json
                :coffee
                  @#{label}Pie = @chart("##{label}Pie", "Pie", #{data}, #{optionsPie})

            %ul.bar-dev-2
              - max = [scm.core, scm.regular, scm.occasional].max
              - %w(core regular occasional).each do |reg|
                - a = scm[reg]
                - percent = 100.0 * a / max
                - title = "#{reg.titleize} developers"
                %li{class: reg}
                  %span.part-contain
                    %strong.part{style: "width:#{percent}%;", title: title, class: reg}= a
                  %span.label= reg


        -#%pre= project.evol.scm.to_yaml
        -#%pre= project.evol.scm.authors
        -#%pre= project.evol.scm.committers.each 
        -#%pre= project.evol.scm.date.map(&:to_date).last(2)

        .col-md-6.active-new
          %h3 Active &amp; new developers

          .year.col-md-6
            %p
              Active this year:
              %strong= scm.authors_365
            %p
              New this year:
              %strong= scm.newauthors_365
              -#%pre= scm.to_yaml

          .month.col-md-6
            %p
              Active this month:
              %strong= scm.authors_30
            %p
              New this month:
              %strong= scm.newauthors_30

          -#%pre= project.evol.scm.to_yaml

          %canvas{id: "#{label}Line", width: 900, height: 150, style: "max-width:100%"}
            - content_for :tail do
              :ruby
                d = project.evol.scm
                months = d.date.count - 1

                data = {
                  labels: lastMonths(d.date, months),
                  datasets: [
                    chartLine('Authors', 'orange', lastMonths(d.authors, months)),
                    chartLine('New authors', 'lightgreen', lastMonths(d.newauthors, months)),
                  ]
                }.to_json
              :coffee
                @#{label}Line = @chart("##{label}Line", "Line", #{data}, #{optionsLine})

        - if stat.its
          .col-md-6
            %h3 Issue tracking
            Ticket participants:
            = stat.its.allhistory_participants
            -#%pre= stat.its.to_yaml
        - if stat.mls
          .col-md-6
            %h3 Mailing lists
            Mailing list participants:
            = stat.mls.senders
            %pre= stat.mls.to_yaml


        - if stat.qaforums
          .col-md-6
            %h3 Forum
            Forum:
            = stat.qaforums.qsenders
            -#%pre= stat.qaforums.to_yaml
        - if stat.irc
          .col-md-6
            %h3 IRC conversions
            .people
              People on IRC:
              = stat.irc.senders
            .people-month
              People on IRC this month:
              = stat.irc.senders_30
            .people-year
              People on IRC this year:
              = stat.irc.senders_365
            %pre= stat.irc.to_yaml
            .activity
              Average activity per sender:
              = stat.irc.sent / stat.irc.senders
            .activity-month
              Average activity per sender this month:
              = stat.irc.sent_30 / stat.irc.senders_30
            .activity-year
              Average activity per sender this year:
              = stat.irc.sent_365 / stat.irc.senders_365
            %pre=project.evol.irc.senders

        .col-md-12
          .pull-right= link_to "View the complete #{project.details.name} dashboard&hellip;", project.details.dashboard

  -#.row
    %h1 Debug

    %pre= data.dashboard.to_yaml

- else
  %p
    %strong Error:
    Dashboard data not found.
