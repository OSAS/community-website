:ruby
  ###
  # Note: The actual document is in this directory as `faq-document.ad`
  # Also: The URL is at /centos-faq/ thanks to a rewrite in config.rb

  doc = Asciidoctor::Document.new open("#{root}/source/centos/faq-document.ad").read()
  html = Nokogiri::HTML doc.render

-# Really, this classname should be in <body>
-# ...but the CSS (as-written) doesn't care, so it's a workaround

- if defined?($cache_centos_faq)
  = $cache_centos_faq 
- else
  = $cache_centos_faq = capture_haml do
    %section.source-ad.centos_faq

      -# Title & preamble
      %h1= doc.doctitle
      = html.css('#preamble')


      -# Table of contents
      %ul#toc.toc.hidden-print
        - html.css('.sect1').each do |section|
          - heading = section.css('h2')

          %li.section.sectlevel1
            = link_to heading.text, "##{heading.attr('id')}"

            - subsections = section.css('.sect2')

            - if subsections.count > 0
              %ul.subsection.sectlevel2
                - subsections.each do |subsection|
                  - heading = subsection.css('h3')
                  %li= link_to heading.text, "##{heading.attr('id')}"


      -# Output the sections & top links
      - html.css('.sect1').each do |section|

        - subsections = section.css('.sect2').remove

        - if section.css(".sectionbody").text.strip.empty?
          - section.css(".sectionbody").remove

        -# Add a class to make targeting a section easier
        - section['class'] += " section" + section.css('h2').attr('id')

        = section
        =# link_to "Back to top", "#toc", class: "top hidden-print"

        - subsections.each do |subsection|
          = subsection
          = link_to "Back to top", "#toc", class: "top hidden-print"
