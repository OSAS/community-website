---
layout: false
---

!!!
%html
  %head
    = javascript_include_tag 'application'
    = javascript_include_tag 'admin'
    = stylesheet_link_tag "application"
    = stylesheet_link_tag "print", media: "print"
    = stylesheet_link_tag "lib/admin"
    = stylesheet_link_tag "vendor/lepture-editor.css"

  %body.admin.admin-blog.admin-blog-edit

    :ruby
      arg = request['params']
      article_date = arg['date'].strip
      article_slug = arg['slug'].strip

    - if defined?(article_slug) && defined?(article_date)

      :ruby
        article = blog.articles.select {|p| p.slug == article_slug && p.date.to_date.strftime('%F') == article_date.to_date.strftime('%F')}.first
        article_file = article.source_file
        article_path = article.source_file.split('/')[0...-1].join('/')
        article_filename = article.source_file.split('/').last
        content = open(article_file).read
        content.gsub!(/\r\n/, "\n") # Handle CRLF (DOS) formatted files

      %nav.headerbar
        .left-side
          =link_to "« Back to admin overview", "/admin/", {class: "btn btn-primary"}
        .right-side
          %button{id: "deleteButton", "data-toggle" => "modal", "data-target" => "#deleteDialog", class: "btn btn-danger"}
            Delete post

          %button{id: "renameButton", "data-toggle" => "modal", "data-target" => "#renameDialog", class: "btn btn-warning"}
            Rename file

          %button{id: "saveButton", "data-toggle" => "modal", "data-target" => "#saveDialog", class: "btn btn-success"}
            Save post

        .center-text
          -#= article_filename
          #saving.hidden
            Saving..

      #edit-ui.row
        .editor.col-sm-6
          %form.editor.form-horizontal#blog-data{action: "/admin/api/update/", method: "post", "data-slug" => article_slug, "data-date" => article.date.to_date}
            %input#hidden-slug{type: "hidden", value: article_slug, name: "slug"}
            %input#hidden-path{type: "hidden", value: article_path, name: "path"}
            %input#hidden-filename{type: "hidden", value: article_filename, name: "filename"}

            .form-group
              -#%label.control-label.col-sm-2{for:"blog-title"} Title
              .col-sm-12
                %input.form-control.title{id:"blog-title", value: article.data['title'], name: "meta[title]"}

            .form-group
              %label.control-label.col-sm-2{for:"blog-author"} Author
              .col-sm-3
                .input-group
                  %input.form-control.author{id:"blog-author", type: "text", value: article.data['author'], name: "meta[author]"}

                  %span.combo-wrap
                    %select#author-combo.combo{name: "author"}
                      - data.authors.sort_by {|n, d| author_name n}.each do |nick, data|
                        - if nick == article.data['author']
                          %option{value: nick, selected: true}= author_name nick
                        - else
                          %option{value: nick}= author_name nick

              %label.control-label.col-sm-2{for:"date-form"} Date
              .col-sm-5
                .input-group
                  %input#date-form.form-control.date{value: (article.data['date'].to_time || article_date).strftime('%F %T %Z'), name: "meta[date]"}
                  .input-group-btn
                    %button.btn.btn-default{id: "date-now", title:"Set date to now"}
                      %i.fa.fa-clock-o

            .form-group
              - tags = article.data['tags']
              - tags = tags.join ', ' if tags.class == Array

              %label.control-label.col-sm-2{for:"blog-tags"} Tags
              .col-sm-10
                %input.form-control.tags{id:"blog-tags", value: tags, name: "meta[tags]"}

            .form-group
              %label.control-label.col-sm-2
                /Options
              .col-sm-2
                %label
                  %input{type: "checkbox", checked: !article.published?, name: "meta[published]"}
                  Draft

              .col-sm-4
                %label
                  %input{type: "checkbox", checked: !(article.data['comments'] == false), name: "meta[comments]"}
                  Enable comments

              -#.col-sm-4.save(style="text-align:right")
                %input.btn.btn-primary#save-button{type:"submit",value:"Save"}

            -#%pre
              =article.data
            .body-editor
              %textarea#blog-content{name: "content"}
                = content.split(/^---$/).drop(2).join('---').strip

        .preview.col-sm-6
          -#%iframe{src: "#{article_path}?contentonly=true"}
          #preview

      /* Rename dialog
      #renameDialog.modal{"aria-hidden" => "true", "aria-labelledby" => "myModalLabel", :role => "dialog", :tabindex => "-1"}
        .modal-dialog
          .modal-content
            -#.modal-header
              %button.close{"data-dismiss" => "modal", :type => "button"}
                %span{"aria-hidden" => "true"} &times;
                %span.sr-only Close

              -#%h4#myModalLabel.modal-title Rename

            .modal-body
              %h4#myModalLabel.modal-title
                %strong.rename-title= article.data['title']
                is currently saved as
                %code.rename-file= article_filename

              %form.form.form-inline
                .form-group
                  %label
                    Rename to:

                  %span.rename-date= article.date.to_date
                  \-
                  %input#newslug.form-control.rename-slug{value: article.slug}
                  \.html.md

                  .alert.alert-warning{role: "alert"}
                    %i.fa.fa-warning
                    %strong Proceed with caution:
                    Renaming the file will change the published URL.
                    You should probably only rename files
                    %i before
                    publishing.

            .modal-footer
              %button.btn.btn-default{"data-dismiss" => "modal", :type => "button"} Cancel
              %button#rename-action.btn.btn-warning{"data-dismiss" => "modal", :type => "button"} Rename file

      /* Delete dialog
      #deleteDialog.modal{"aria-hidden" => "true", "aria-labelledby" => "myModalLabel", :role => "dialog", :tabindex => "-1"}
        .modal-dialog
          .modal-content
            .modal-body
              %h4#myModalLabel.modal-title= "Delete <code>#{article_filename}</code>?"

              .alert.alert-danger
                %i.fa.fa-warning
                %strong Warning:
                You cannot undo this action, unless the post has
                been already committed to git.

            .modal-footer
              %button.btn.btn-default{"data-dismiss" => "modal", :type => "button"} Cancel
              %button#delete-action.btn.btn-danger{"data-dismiss" => "modal", :type => "button"} Delete post

    - else

      = link_to "Return to admin page", ".."

:coffee
  # Variables

  $page = $(document)
  $form = $('#blog-data')
  $author = $('#blog-author')
  $content = $('.body-editor')
  $renameDialog = $('#renameDialog')
  $authorCombo = $('#author-combo')
  changeTimer = null
  currentSave = null
  currentLoad = null


  # Functions

  resizeTextarea = ->
    @contentTop = $content.position()['top']
    @contentLeft = $content.position()['left']
    $cm = $('.CodeMirror')

    #$content.css("height", $page.height() - @contentTop - @contentLeft + "px")
    $cm.css("height", $page.height() - @contentTop - @contentLeft + "px !important")

  stopAjax = ->
    do currentSave.abort if currentSave
    do currentLoad.abort if currentLoad

  renderPreview = ->
    do stopAjax
    $.get "#{article.url}?contentonly=true", (data)->
      @article = $('article', data)
      $('#preview').html(@article)

  disableForm = ->
    $('input,button,select', $form).attr('disabled', 'disabled')
    $content.addClass('disabled')
    editor.codemirror.state.disableInput = true

  saveForm = ->
    do stopAjax
    $('#saving').removeClass('hidden').fadeIn(50)
    currentSave = $.post $form.attr('action'), $form.serialize(), (data)->
      $('#saving').fadeOut(1000)

      # check to ensure slug and date are the same
      returnval = $.parseJSON data

      if returnval['date'] == $form.data('date') && returnval['slug'] == $form.data('slug')
        setTimeout renderPreview, 500
      else
        do disableForm
        setTimeout ->
          window.location = "?date=" + returnval['date'] + "&slug=" + returnval['slug']
        , 500

  deleteFile = ->
    do stopAjax
    $.post "/admin/api/delete/", $form.serialize(), (data)->
      do disableForm
      setTimeout ->
        window.location = "/admin/"
      , 200

  codeChange = ->
    clearTimeout changeTimer
    changeTimer = setTimeout(->
      do $form.submit
    , 500)

  parameterize = (str) ->
    # Quick, lame 80%-working hack for "parameterize"
    str.toLowerCase().replace(/\s/g, '-').replace(/[^\w-]/g, '')

  syncFields = ->
    title = $("#blog-title").val()
    date = $("#date-form").val().match(/[^ ]*/)

    $('.rename-date', $renameDialog).html(date)
    $('.rename-slug', $renameDialog).val(parameterize(title))

  @formattedDate = ->
    now = new Date()

    # hack: 'utc' is actually still local, but converted — ignore TZ
    utc = new Date(now.getTime() + now.getTimezoneOffset() * 60000)
    utc.toLocaleFormat('%F %T UTC')


  # Hook up events

  $form.on 'submit', (e) ->
    do editor.codemirror.save
    do saveForm
    do e.preventDefault
    return false

  $form.on 'change', codeChange
  $('#blog-title,#blog-author').on 'keypress', codeChange

  $('#renameButton').on 'click', (e) ->
    do syncFields
    #do $('.rename-slug').focus

  $(window).on 'unload', saveForm
  #$(window).on 'blur', saveForm

  $authorCombo.on 'change', (e) ->
    nick = $authorCombo.val()
    $author.val(nick).focus()

  $('#date-now').on 'click', (e) ->
    $('#date-form').val(formattedDate())
    do $('#date-form').focus

  $('#rename-action').on 'click', (e) ->
    $('#hidden-slug').val($('#newslug').val())
    do stopAjax
    do saveForm

  $('#delete-action').on 'click', deleteFile

  $('#saveButton').on 'click', saveForm


  # Run on ready
  $ ->
    do LiveReload.shutDown

    # Start CodeMirror editor & configure
    editor = new Editor()
    do editor.render
    editor.codemirror.on 'change', codeChange
    editor.codemirror.on 'focus', -> $('.CodeMirror').addClass('focus')
    editor.codemirror.on 'blur', -> $('.CodeMirror').removeClass('focus')
    do editor.codemirror.focus

    # Export editor, to let it be ediable
    window.editor = editor

    # Work-around cache issues (back button primarily)
    do renderPreview

  @
